{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/luffyzhou/webfront/github/next-sentry-demo/pages/_error.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Error from 'next/error';\nimport * as Sentry from '@sentry/node';\n\nvar MyError = function MyError(_ref) {\n  var statusCode = _ref.statusCode,\n      hasGetInitialPropsRun = _ref.hasGetInitialPropsRun,\n      err = _ref.err;\n\n  if (!hasGetInitialPropsRun && err) {\n    // getInitialProps is not called in case of\n    // https://github.com/zeit/next.js/issues/8592. As a workaround, we pass\n    // err via _app.js so it can be captured\n    Sentry.captureException(err);\n  }\n\n  return __jsx(Error, {\n    statusCode: statusCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nMyError.getInitialProps = function _callee(_ref2) {\n  var res, err, asPath, errorInitialProps;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, err = _ref2.err, asPath = _ref2.asPath;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Error.getInitialProps({\n            res: res,\n            err: err\n          }));\n\n        case 3:\n          errorInitialProps = _context.sent;\n          // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n          // getInitialProps has run\n          errorInitialProps.hasGetInitialPropsRun = true;\n\n          if (!res) {\n            _context.next = 13;\n            break;\n          }\n\n          if (!(res.statusCode === 404)) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            statusCode: 404\n          });\n\n        case 8:\n          if (!err) {\n            _context.next = 11;\n            break;\n          }\n\n          Sentry.captureException(err);\n          return _context.abrupt(\"return\", errorInitialProps);\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          if (!err) {\n            _context.next = 16;\n            break;\n          }\n\n          Sentry.captureException(err);\n          return _context.abrupt(\"return\", errorInitialProps);\n\n        case 16:\n          // If this point is reached, getInitialProps was called without any\n          // information about what the error might be. This is unexpected and may\n          // indicate a bug introduced in Next.js, so record it in Sentry\n          Sentry.captureException(new Error(\"_error.js getInitialProps missing data at path: \".concat(asPath)));\n          return _context.abrupt(\"return\", errorInitialProps);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyError;","map":{"version":3,"sources":["/Users/luffyzhou/webfront/github/next-sentry-demo/pages/_error.js"],"names":["React","Error","Sentry","MyError","statusCode","hasGetInitialPropsRun","err","captureException","getInitialProps","res","asPath","errorInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgD;AAAA,MAA7CC,UAA6C,QAA7CA,UAA6C;AAAA,MAAjCC,qBAAiC,QAAjCA,qBAAiC;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC9D,MAAI,CAACD,qBAAD,IAA0BC,GAA9B,EAAmC;AACjC;AACA;AACA;AACAJ,IAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AACD;;AAED,SAAO,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEF,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CATD;;AAWAD,OAAO,CAACK,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcH,GAAd,SAAcA,GAAd,EAAmBI,MAAnB,SAAmBA,MAAnB;AAAA;AAAA,2CACQT,KAAK,CAACO,eAAN,CAAsB;AAAEC,YAAAA,GAAG,EAAHA,GAAF;AAAOH,YAAAA,GAAG,EAAHA;AAAP,WAAtB,CADR;;AAAA;AAClBK,UAAAA,iBADkB;AAGxB;AACA;AACAA,UAAAA,iBAAiB,CAACN,qBAAlB,GAA0C,IAA1C;;AALwB,eAOpBI,GAPoB;AAAA;AAAA;AAAA;;AAAA,gBAalBA,GAAG,CAACL,UAAJ,KAAmB,GAbD;AAAA;AAAA;AAAA;;AAAA,2CAeb;AAAEA,YAAAA,UAAU,EAAE;AAAd,WAfa;;AAAA;AAAA,eAkBlBE,GAlBkB;AAAA;AAAA;AAAA;;AAmBpBJ,UAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AAnBoB,2CAqBbK,iBArBa;;AAAA;AAAA;AAAA;;AAAA;AAAA,eAiClBL,GAjCkB;AAAA;AAAA;AAAA;;AAkCpBJ,UAAAA,MAAM,CAACK,gBAAP,CAAwBD,GAAxB;AAlCoB,2CAoCbK,iBApCa;;AAAA;AAwCxB;AACA;AACA;AACAT,UAAAA,MAAM,CAACK,gBAAP,CACE,IAAIN,KAAJ,2DAA6DS,MAA7D,EADF;AA3CwB,2CA+CjBC,iBA/CiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAkDA,eAAeR,OAAf","sourcesContent":["import React from 'react';\nimport Error from 'next/error';\nimport * as Sentry from '@sentry/node';\n\nconst MyError = ({ statusCode, hasGetInitialPropsRun, err }) => {\n  if (!hasGetInitialPropsRun && err) {\n    // getInitialProps is not called in case of\n    // https://github.com/zeit/next.js/issues/8592. As a workaround, we pass\n    // err via _app.js so it can be captured\n    Sentry.captureException(err);\n  }\n\n  return <Error statusCode={statusCode} />\n}\n\nMyError.getInitialProps = async ({ res, err, asPath }) => {\n  const errorInitialProps = await Error.getInitialProps({ res, err })\n\n  // Workaround for https://github.com/zeit/next.js/issues/8592, mark when\n  // getInitialProps has run\n  errorInitialProps.hasGetInitialPropsRun = true;\n\n  if (res) {\n    // Running on the server, the response object is available.\n    //\n    // Next.js will pass an err on the server if a page's `getInitialProps`\n    // threw or returned a Promise that rejected\n\n    if (res.statusCode === 404) {\n      // Opinionated: do not record an exception in Sentry for 404\n      return { statusCode: 404 };\n    }\n\n    if (err) {\n      Sentry.captureException(err);\n\n      return errorInitialProps;\n    }\n  } else {\n    // Running on the client (browser).\n    //\n    // Next.js will provide an err if:\n    //\n    //  - a page's `getInitialProps` threw or returned a Promise that rejected\n    //  - an exception was thrown somewhere in the React lifecycle (render,\n    //    componentDidMount, etc) that was caught by Next.js's React Error\n    //    Boundary. Read more about what types of exceptions are caught by Error\n    //    Boundaries: https://reactjs.org/docs/error-boundaries.html\n    if (err) {\n      Sentry.captureException(err);\n\n      return errorInitialProps;\n    }\n  }\n\n  // If this point is reached, getInitialProps was called without any\n  // information about what the error might be. This is unexpected and may\n  // indicate a bug introduced in Next.js, so record it in Sentry\n  Sentry.captureException(\n    new Error(`_error.js getInitialProps missing data at path: ${asPath}`)\n  );\n\n  return errorInitialProps;\n}\n\nexport default MyError;"]},"metadata":{},"sourceType":"module"}