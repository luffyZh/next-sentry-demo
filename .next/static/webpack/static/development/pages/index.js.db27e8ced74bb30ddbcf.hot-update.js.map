{"version":3,"file":"static/webpack/static/development/pages/index.js.db27e8ced74bb30ddbcf.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link';\n\nconst Home = () => (\n  <div className='container'>\n    <style jsx>{`\n      .container {\n        max-width: 800px;\n        margin: 0 auto;\n        background: #fff;\n        padding: 20px;\n      }\n    `}</style>\n    <h2>Next-Sentry-Demo</h2>\n    <p>\n      This example demonstrates how to record unhandled exceptions in your code\n      with Sentry. There are several test pages below that result in various\n      kinds of unhandled exceptions.\n    </p>\n    <p>\n      <strong>Important:</strong> exceptions in development mode take a\n      different path than in production. These tests should be run on a\n      production build (i.e. 'next build').{' '}\n      <a href=\"https://nextjs.org/docs#custom-error-handling\">Read more</a>\n    </p>\n    <ul>\n      <li>Server exceptions</li>\n      <ul>\n        <li>\n          getInitialProps throws an Error. This should cause _error.js to render\n          and record Error('Client Test 1') in Sentry.{' '}\n          <a href=\"/server/test1\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          getInitialProps returns a Promise that rejects. This should cause\n          _error.js to render and record Error('Server Test 2') in Sentry.{' '}\n          <a href=\"/server/test2\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          getInitialProps calls a Promise that rejects, but does not handle the\n          rejection or await its result (returning synchronously). Sentry should\n          record Error('Server Test 3').{' '}\n          <a href=\"/server/test3\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          There is a top-of-module Promise that rejects, but its result is not\n          awaited. Sentry should record Error('Server Test 4'). Note this will\n          also be recorded on the client side, once the page is hydrated.{' '}\n          <a href=\"/server/test4\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n      </ul>\n\n      <li>Client exceptions</li>\n      <ul>\n        <li>\n          getInitialProps throws an Error. This should cause _error.js to render\n          and record Error('Client Test 1') in Sentry. Note Sentry will double\n          count this exception. Once from an unhandledrejection and again in\n          _error.js. Could be a bug in Next.js or Sentry, requires more\n          debugging.{' '}\n          <Link href=\"/client/test1\">\n            <a>Perform client side navigation</a>\n          </Link>\n        </li>\n        <li>\n          getInitialProps returns a Promise that rejects. This should cause\n          _error.js to render and record Error('Client Test 2') in Sentry. As\n          above, Sentry will double count this exception.{' '}\n          <Link href=\"/client/test2\">\n            <a>Perform client side navigation</a>\n          </Link>\n        </li>\n        <li>\n          getInitialProps calls a Promise that rejects, but does not handle the\n          rejection or await its result (returning synchronously). Sentry should\n          record Error('Client Test 3').{' '}\n          <Link href=\"/client/test3\">\n            <a>Perform client side navigation</a>\n          </Link>\n        </li>\n        <li>\n          There is a top-of-module Promise that rejects, but its result is not\n          awaited. Sentry should record Error('Client Test 4').{' '}\n          <Link href=\"/client/test4\">\n            <a>Perform client side navigation</a>\n          </Link>{' '}\n          or{' '}\n          <a href=\"/client/test4\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          There is a top-of-module exception. _error.js should render and record\n          ReferenceError('process is not defined') in Sentry.{' '}\n          <Link href=\"/client/test5\">\n            <a>Perform client side navigation</a>\n          </Link>{' '}\n          or{' '}\n          <a href=\"/client/test5\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          There is an exception during React lifecycle that is caught by\n          Next.js's React Error Boundary. In this case, when the component\n          mounts. This should cause _error.js to render and record Error('Client\n          Test 6') in Sentry.{' '}\n          <Link href=\"/client/test6\">\n            <a>Perform client side navigation</a>\n          </Link>{' '}\n          or{' '}\n          <a href=\"/client/test6\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          There is an unhandled Promise rejection during React lifecycle. In\n          this case, when the component mounts. Sentry should record\n          Error('Client Test 7').{' '}\n          <Link href=\"/client/test7\">\n            <a>Perform client side navigation</a>\n          </Link>{' '}\n          or{' '}\n          <a href=\"/client/test7\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n        <li>\n          An Error is thrown from an event handler. Sentry should record\n          Error('Client Test 8').{' '}\n          <Link href=\"/client/test8\">\n            <a>Perform client side navigation</a>\n          </Link>{' '}\n          or{' '}\n          <a href=\"/client/test8\" target=\"_blank\">\n            Open in a new tab\n          </a>\n        </li>\n      </ul>\n    </ul>\n  </div>\n)\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3IA;AACA;AAkJA;;;;A","sourceRoot":""}